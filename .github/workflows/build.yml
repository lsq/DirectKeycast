name: check&build

on:
  #schedule:
  #  - cron: "30 0/8 * * 0/3"
  workflow_dispatch:
  push:
    # branches: master
    paths:
      - README.md
      - .github/workflows/build.yml
      - script/build.sh

    
jobs:
  check_update:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      matrix:
        include: [
          { msystem: ucrt64, toolchain: ucrt-x86_64 }
          #,
          #{ msystem: mingw64, toolchain: x86_64 },
          #{ msystem: mingw32, toolchain: i686 }
          ]
      fail-fast: false

    # outputs:
    #   updateable: ${{ steps.check_update.outputs.updateable}}
    #   jobsinfo: ${{ steps.check_update.outputs.jobsinfo}}
    steps:
      -
        name: Configure git
        shell: cmd
        run: git config --global core.autocrlf false
      - uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: mingw-w64-${{ matrix.toolchain }}-toolchain base-devel binutils git mingw-w64-${{ matrix.toolchain }}-cmake
          pacboy: >-
            aria2:p
            ca-certificates
          update: true
          path-type: inherit
          #location: C:\
          release: false
          
      - name: build
        #if: ${{ steps.check_update.outputs.updateable == 1 }}
        id: build
        run: |
          bash ./scripts/build.sh
        env:
          MINGW_ARCH: ${{ matrix.msystem }}
          PKGEXT: ".pkg.tar.zst"
               
      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        #if: ${{ steps.check_update.outputs.updateable == 1 }}
        with:
          files: |
            directkeycast*.exe           
          name: latest      
          tag_name: latest      
          #body_path: gitlog.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
